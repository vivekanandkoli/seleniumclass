package tiffa;

import static org.junit.Assume.assumeTrue;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.lang.management.ManagementFactory;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.UnknownHostException;
import java.nio.file.FileSystem;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import java.util.Timer;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;

import javax.mail.BodyPart;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Message;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanException;
import javax.management.MBeanServer;
import javax.management.MalformedObjectNameException;
import javax.management.ObjectName;
import javax.management.ReflectionException;
import javax.servlet.SessionTrackingMode;
import javax.xml.soap.AttachmentPart;

import org.openqa.selenium.remote.RemoteWebDriver;
import org.apache.log4j.lf5.viewer.configure.ConfigurationManager;
import org.apache.poi.hwpf.usermodel.DateAndTime;
import org.apache.xml.serializer.utils.Messages;
import org.eclipse.jetty.websocket.api.Session;
import org.openqa.selenium.Capabilities;
import org.openqa.selenium.WebDriver;

import com.gargoylesoftware.htmlunit.attachment.Attachment;
import com.sun.mail.smtp.SMTPTransport;
import com.sun.tools.javac.util.Convert;
import com.sun.xml.internal.org.jvnet.mimepull.MIMEMessage;

import eu.bitwalker.useragentutils.Browser;
import eu.bitwalker.useragentutils.UserAgent;
import sun.net.smtp.SmtpClient;
import sun.swing.SwingUtilities2.Section;

public class Mail
{
	   private javax.mail.Session session;   
	public static void main(String[] args) 
	{
		
	}
	
 

	 public void SendMail(int Pass_StatusCount, int Fail_StatusCount, String URL, int ScenarioCount, String startTime, String endTime, String ExcelPath) throws InstanceNotFoundException, AttributeNotFoundException, MalformedObjectNameException, ReflectionException, MBeanException, ParseException, MessagingException, IOException
     {
		// ExcelPath="F:\\TiffaProject\\TestExecution_Report\\Test_Execution Report.xls";
		 String ReceivedTime =null, Sender = null, ID = null, MailBody = null;
		 String Subject = null; String Body = null;
         ID = "Mansi.patel@kalelogistics.in";
         Sender = "Mansi.patel@kalelogistics.in";
         Subject = "Test Execution Report";

         Mail pgm = new Mail();
         String mailbody = pgm.MailBody_HTML(Pass_StatusCount, Fail_StatusCount, URL, ScenarioCount, startTime, endTime);

         pgm.SendReportMail(ID, mailbody, Subject, ID, ExcelPath);
     }

     public String MailBody_HTML(int Pass_StatusCount, int Fail_StatusCount, String URL, int ScenarioCount, String startTime, String endTime) throws ParseException, UnknownHostException, InstanceNotFoundException, AttributeNotFoundException, MalformedObjectNameException, ReflectionException, MBeanException
     {
    	 Date date =new Date();
		 String s = new SimpleDateFormat("dd-MM-yyyy ").format(Calendar.getInstance().getTime());
       
         int TotalPassed = 0;
         int TotalFailed = 0;
         int TotalTestCases = 0;
         String StartTime = null;
         String EndTime = null; 
         String Timestamp;
         String starttime1;
         String endtime1;
    
         
    
         String TotalExecutionTime;
         long diff;
         StringBuilder Emaibody = new StringBuilder();
         String ScriptExcutedBy;
         String MachineConfiguration;

         ScriptExcutedBy = InetAddress.getLocalHost().getHostName();
         
//         UserAgent userAgent = UserAgent.parseUserAgentString(request.getHeader("User-Agent"));
//         Browser browser = userAgent.getBrowser();
//
//         String browserName = browser.getName();
//         //or 
//         // String browserName = browser.getGroup().getName();
//         Version browserVersion = userAgent.getBrowserVersion();
//         System.out.println("The user is using browser " + browserName + " - version " + browserVersion)
         
         long memorySize = ((com.sun.management.OperatingSystemMXBean) ManagementFactory
        	        .getOperatingSystemMXBean()).getTotalPhysicalMemorySize();
         
         MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
         Object attribute =
             mBeanServer.getAttribute(new ObjectName("java.lang", "type", "OperatingSystem"), "TotalPhysicalMemorySize");
         long l = Long.parseLong(attribute.toString());       
         System.out.println("Total memory: " + (l / (1024*1024))); 
         
         
         String query = "Select NumberOfLogicalProcessors From Win32_Processor";   
         int cores = Runtime.getRuntime().availableProcessors();
         
         


         MachineConfiguration = "OS-" + memorySize + ", Ram- " + l + "GB," + " Processor-" + cores;

         TotalPassed = Pass_StatusCount;
         TotalFailed = Fail_StatusCount;

         TotalTestCases = TotalPassed + TotalFailed;

            long second = 1000l;
	        long minute = 60l * second;
	        long hour = 60l * minute;
	     
	        starttime1 = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
	        StartTime=starttime1;   
	          
	        endtime1 = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
	        EndTime=endtime1;   
	           
	        starttime1 = startTime;
	        endtime1 = endTime;
			
         SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");
         Date date1 = format.parse(StartTime);
         Date date2 = format.parse(EndTime);
               
         diff = date2.getTime() - date1.getTime();
         TotalExecutionTime=String.format("%02d", diff / hour)+":"+String.format("%02d", (diff % hour) / minute)+":"+String.format("%02d", (diff % minute) / second);
      

         Emaibody.append("<div><div style='float: left; display: block; font-size: 22px; width: 100%; height: 30px;font-weight: bold; text-align: center; font-family: Arial, sans-serif;'>");
         Emaibody.append("" + "TIFFA Automation Test Report</div><table cellspacing='2' style='float: left; display: block; width: 650px; font-family: Arial, sans-serif;"); //Changed By Ali
         Emaibody.append("color: #333; zoom: -1; font-size: 12px; font-weight: bold; background-color: #FCFBF3;'>");
         Emaibody.append("<tr><td>Script Executed By</td><td style='color: #000'>");
         Emaibody.append(ScriptExcutedBy + "</td></tr>");
         Emaibody.append("<tr><td>Script Executed On</td><td style='color: #000'>");
         Emaibody.append(s + "</td></tr>");
         Emaibody.append("<tr><td>Total Test Cases</td><td style='color: #000'>");
         Emaibody.append(TotalTestCases + "</td></tr>");
         Emaibody.append("<tr><td>Total Passed</td><td style='color: #000'>");
         Emaibody.append(TotalPassed + "</td></tr>");
         Emaibody.append("<tr><td>Total Failed</td><td style='color: #000'>");
         Emaibody.append(TotalFailed + "</td></tr>");
         Emaibody.append("<tr><td>Total execution time(HH:MM:SS)</td><td style='color: #000'>");
         Emaibody.append(TotalExecutionTime + "</td></tr>");
         Emaibody.append("<tr><td>Browser Version</td><td style='color: #000'>");
         Emaibody.append("65.0" + "</td></tr>");
         Emaibody.append("<tr><td>Environment</td><td style='color: #000'>");
         Emaibody.append("[ " + "" + URL + "" + " ]" + "</td></tr>");
         Emaibody.append("<tr><td>Machine Configuration-</td><td style='color: #000'>");
         Emaibody.append(MachineConfiguration + "</td></tr>");
         Emaibody.append("</table>");
         // End of Report summary

         // Start of Automation summary

         // Test output heading
         Emaibody.append("<div style='float: left; display: block; margin-top: 10px; font-size: 20px; width: 100%;height: 30px; font-weight: bold; text-align: ; font-family: Arial, sans-serif;'>Test Output</div>");
         // Email Summary Table tag
         Emaibody.append("<table style='float: left; margin-top: 10px; display: block; font-family: Arial, Helvetica, sans-serif;color: #333; zoom: -1; font-size: 12px' cellpadding='5' cellspacing='1' bgcolor='#000000'>");
         // Heading of output summary  table
         Emaibody.append("<tr><th style='background-color: #81D2FE'>Module Name</th>");
         Emaibody.append("<th style='background-color: #81D2FE'>Total Scenarios Executed</th>");
         Emaibody.append("<th style='background-color: #81D2FE'>Start Time</th>");
         Emaibody.append("<th style='background-color: #81D2FE'>End Time</th>");
         Emaibody.append("<th style='background-color: #81D2FE'>Total Execution Time(HH:MM:SS)</th>");
         Emaibody.append("<th style='background-color: #81D2FE'>Total Test Cases</th>");
         Emaibody.append("<th style='background-color: #81D2FE'>Total Passed</th>");
         Emaibody.append("<th style='background-color: #81D2FE'>Total Failed</th></tr>");



         // End of Heading of output summary  table
         String alterateBgColor = "#E2F8FE";
         TotalPassed = 0; TotalFailed = 0; TotalTestCases = 0;
        
        
        // StartTime=new DateAndTime();EndTime = new DateAndTime();
       
        
         TotalPassed = Pass_StatusCount;
         TotalFailed = Fail_StatusCount;

         TotalTestCases = TotalPassed + TotalFailed;
        

         starttime1 = new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss").format(Calendar.getInstance().getTime());
       	 starttime1= StartTime;
         endtime1 = new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss").format(Calendar.getInstance().getTime());
         endtime1= EndTime; 
//         StartTime = startTime.toString();
//         EndTime = endTime.toString();
//        
          diff = date2.getTime() - date1.getTime();
          TotalExecutionTime=String.format("%02d", diff / hour)+":"+String.format("%02d", (diff % hour) / minute)+":"+String.format("%02d", (diff % minute) / second);
        
         Emaibody.append("<tr style='background-color: " + alterateBgColor + "'>");
         //Add ModuleName
         Emaibody.append("<td align='center'>" + "TIFFA-Export" + "</td>");
         //Add ScenarioCount
         Emaibody.append("<td align='right'>" + ScenarioCount + "</td>");
         //Add End Time
         Emaibody.append("<td>" + StartTime + "</td>");
         //Add Start Time
         Emaibody.append("<td>" + EndTime + "</td>");
         //Add Total execution time 
         Emaibody.append("<td  align='center'>" + TotalExecutionTime + "</td>");
         //Add Total Test Cases 
         Emaibody.append("<td  align='right'>" + TotalTestCases + "</td>");
         //Add Total Passed 
         //Emaibody.Append("<td ><strong style='color: Green;'align='center' >" + TotalPassed + "</strong></td>");
         Emaibody.append("<td style='color:Green;'  align='right'> " + TotalPassed + " </td>");
         //Add Total Failed 
         Emaibody.append("<td style='color:Red;'  align='right'> " + TotalFailed + " </td>");
         Emaibody.append("</tr>");
         if (alterateBgColor == "#E2F8FE")
         {
             alterateBgColor = "#D0F3FD";
         }
         else
         {
             alterateBgColor = "#E2F8FE";
         }

         String e1=Emaibody.toString();
        return e1;
     }
  

     @SuppressWarnings("null")
	public int SendReportMail(String To, String body, String SubjectFileName, String ID, String ExcelPath)throws MessagingException, IOException
     {

    	   final String username ="Mansi.patel@kalelogistics.in";
    	   final String password ="kale_123";

        	 boolean sessionDebug=false;

//             File configFile = new File("config_file.properties");
//     		 InputStream inputStream = new FileInputStream(configFile);
//     		 Properties props = new Properties();
//     		 props.load(inputStream);
//        	     		
//     		 String from = props.getProperty("From");
//             String defaultid = props.getProperty("DefaultID");
//             String to = props.getProperty("To");
//             String Mailcc = props.getProperty("MailCc");
//             String Mailcc1 = props.getProperty("MailCc1");
//     		
//             String smtpserver=props.getProperty("SmtpServer");
//             String emailenableSs1=props.getProperty("EmailEnableSsl");
//             String smtpserverport=props.getProperty("SmtpServerPort");
//            // String username=props.getProperty("LoginID");
//             //String password=props.getProperty("Password");
//             String id=props.getProperty("ID");
     		    		
     		 Properties props1 = System.getProperties();
     		 props1.put("mail.smtp.starttls.enable", "true");            
             props1.put("mail.smtp.host", "smtp.office365.com");
             props1.put("mail.smtp.port", "587");
             props1.put("mail.smtp.auth", "true");
             props1.put("mail.smtp.starttls.required", "true");
     	     
     		
             javax.mail.Session session= javax.mail.Session.getDefaultInstance(props1, new javax.mail.Authenticator() {
                 protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                     return new javax.mail.PasswordAuthentication(username, password);
                 }
               });
             
             String to = "mansi.patel@kalelogistics.in";
             String from = "mansi.patel@kalelogistics.in";
             String cc = "mansi.patel@kalelogistics.in";
      
            
             try
             {
            	 
            	 MimeMessage message = new MimeMessage(session);

             	   // Set From: header field of the header.
          	   message.setFrom(new InternetAddress(from));

          	   // Set To: header field of the header.
          	   message.setRecipients(Message.RecipientType.TO,
                        InternetAddress.parse(to));

          	   // Set Subject: header field
          	   message.setSubject(SubjectFileName);
          	 

          	   // Attachment //
          	   
          	  BodyPart messageBodyPart = new MimeBodyPart();
         	  MimeMultipart multipart = new MimeMultipart();          
                     	  
         	 messageBodyPart.setFileName(ExcelPath);
         	multipart.addBodyPart(messageBodyPart);
         	message.setContent(ExcelPath, "text/excel");
         	  
          	   // Add BodyHTML Part //
          	           
          messageBodyPart.setContent(
     			 body,
                  "text/html");                                      
          multipart.addBodyPart(messageBodyPart);
          message.setContent(multipart);
          	   
          	   
          	   
          	   
          	 
          	   
                     
              	   
        
          	            	                   	                   	   
          	   // Send message
          	   Transport.send(message);

          	   System.out.println("Message Sent successfully....");
          	   
    

          message = null;

            return 1;
             
             
             
     		
     		 
     	

     		
         }
         catch (Exception ex)
         {
            System.out.println(ex.getMessage());
                 //Write in Notepad

             }
             return 0;

         }
}

     
	
	
	

